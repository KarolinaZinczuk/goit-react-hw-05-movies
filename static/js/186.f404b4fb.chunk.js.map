{"version":3,"file":"static/js/186.f404b4fb.chunk.js","mappings":"uUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAY,kCAEZC,EAAW,mCAAG,oGACAH,EAAAA,EAAAA,IAAA,sCAAyCC,IADzC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDO,EAApD,YADC,cAClBJ,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZG,EAAU,mCAAG,WAAOC,GAAP,uFACCV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADxC,cAChBG,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKVM,EAAO,mCAAG,WAAOD,GAAP,uFACIV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,IADnD,cACbG,EADa,yBAEZA,EAASC,KAAKO,MAFF,2CAAH,sDAKPC,EAAU,mCAAG,WAAOH,GAAP,uFACCV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,YADD,cAChBG,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qD,8ECOvB,UA9BgB,WACZ,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAOR,OALAQ,EAAAA,EAAAA,YAAU,YACNL,EAAAA,EAAAA,IAAWH,GACNS,MAAK,SAAAb,GAAO,OAAIU,EAAWV,EAAf,GACpB,GAAE,CAACI,KAGA,gCACwB,IAAnBK,EAAQK,QACL,iDAEA,0BACI,wBACKL,EAAQM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,QAA3B,OACT,2BACI,wBAAKF,KACL,uBAAIC,KACJ,uBAAIC,MAHCH,EADA,QAN7B,MAkBP,C","sources":["API/fetchMovies.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '92be59e0090ddfe5570b8756c403476a';\n\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const getTrending = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const searchMovies = async (query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n    return response.data.results;\n}\n\nexport const getDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const getCast = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n}\n\nexport const getReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`);\n    return response.data.results;\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviews } from \"API/fetchMovies\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        getReviews(movieId)\n            .then(results => setReviews(results))\n    }, [movieId]);\n    \n    return (\n        <>\n            {reviews.length === 0 ? (\n                <p> There is no reviews</p>\n            ) : (\n                <div>\n                    <ul>\n                        {reviews.map(({ id, author, created_at, content }) => (\n                            <li key={id}>\n                                <h2>{author}</h2>\n                                <p>{created_at}</p>\n                                <p>{content}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )};\n        </>\n    );\n};\n\nexport default Reviews;"],"names":["axios","API_KEY","IMAGE_URL","getTrending","response","data","results","searchMovies","query","getDetails","movieId","getCast","cast","getReviews","useState","reviews","setReviews","useParams","useEffect","then","length","map","id","author","created_at","content"],"sourceRoot":""}
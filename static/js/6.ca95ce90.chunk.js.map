{"version":3,"file":"static/js/6.ca95ce90.chunk.js","mappings":"qUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAY,kCAEZC,EAAW,mCAAG,oGACAH,EAAAA,EAAAA,IAAA,sCAAyCC,IADzC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDO,EAApD,YADC,cAClBJ,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZI,EAAU,mCAAG,WAAOC,GAAP,uFACCV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADxC,cAChBG,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKVM,EAAO,mCAAG,WAAOD,GAAP,uFACIV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,IADnD,cACbG,EADa,yBAEZA,EAASC,KAAKO,MAFF,2CAAH,sDAKPC,EAAU,mCAAG,WAAOH,GAAP,uFACCV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,YADD,cAChBG,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qD,sGCUvB,UA/Ba,WACT,IAAMQ,EAAWC,EAAAA,GACjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNlB,EAAAA,EAAAA,MACKmB,MAAK,SAAAC,GAAQ,OAAIL,GAAU,OAAIK,GAAlB,IACbC,OAAM,SAAAL,GAAK,OAAIC,EAASD,EAAMM,QAAnB,GACnB,GAAE,KAGC,iCACI,eAAIC,UAAWC,EAAAA,EAAAA,SAAf,6BACA,eAAID,UAAWC,EAAAA,EAAAA,KAAf,SACKV,GACGA,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACP,yBACI,SAAC,KAAD,CACIC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMnB,GAFnB,UAGI,uBAAIgB,OAJHD,EADF,MAUlBV,IAAS,sEAGrB,C,oBClCD,KAAgB,SAAW,wBAAwB,KAAO,oBAAoB,WAAa,0BAA0B,iBAAmB,gCAAgC,gBAAkB,+B","sources":["API/fetchMovies.js","Pages/Home.jsx","webpack://react-homework-template/./src/Pages/Pages.module.css?df53"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '92be59e0090ddfe5570b8756c403476a';\n\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const getTrending = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const searchMovies = async (query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n    return response.data;\n}\n\nexport const getDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const getCast = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n}\n\nexport const getReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`);\n    return response.data.results;\n}","import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { getTrending } from \"API/fetchMovies\";\n\nimport styles from './Pages.module.css';\n\nconst Home = () => {\n    const location = useLocation;\n    const [movies, setMovies] = useState(null);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        getTrending()\n            .then(resoults => setMovies([...resoults]))\n            .catch(error => setError(error.message));\n    }, []);\n\n    return (\n        <>\n            <h1 className={styles.trending}>Tranding today</h1>\n            <ul className={styles.list}>\n                {movies &&\n                    movies.map(({ id, title }) => (\n                        <li key={id}>\n                            <Link\n                                to={`/movies/${id}`}\n                                state={{ from: location }}>\n                                <p>{title}</p>\n                            </Link>\n                        </li>\n                    ))}\n            </ul>\n            {error && <p> Something went wrong, please try again.</p>}\n        </>\n    );\n};\n\nexport default Home;","// extracted by mini-css-extract-plugin\nexport default {\"trending\":\"Pages_trending__ZSslv\",\"list\":\"Pages_list__TlrcV\",\"SearchForm\":\"Pages_SearchForm__y3vTI\",\"SearchFormButton\":\"Pages_SearchFormButton__Fm0-W\",\"SearchFormInput\":\"Pages_SearchFormInput__almwF\"};"],"names":["axios","API_KEY","IMAGE_URL","getTrending","response","data","results","searchMovies","query","getDetails","movieId","getCast","cast","getReviews","location","useLocation","useState","movies","setMovies","error","setError","useEffect","then","resoults","catch","message","className","styles","map","id","title","to","state","from"],"sourceRoot":""}
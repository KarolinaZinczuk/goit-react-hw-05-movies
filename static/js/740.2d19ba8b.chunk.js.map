{"version":3,"file":"static/js/740.2d19ba8b.chunk.js","mappings":"uUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAY,kCAEZC,EAAW,mCAAG,oGACAH,EAAAA,EAAAA,IAAA,sCAAyCC,IADzC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDO,EAApD,YADC,cAClBJ,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZG,EAAU,mCAAG,WAAOC,GAAP,uFACCV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADxC,cAChBG,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKVM,EAAO,mCAAG,WAAOD,GAAP,uFACIV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,IADnD,cACbG,EADa,yBAEZA,EAASC,KAAKO,MAFF,2CAAH,sDAKPC,EAAU,mCAAG,WAAOH,GAAP,uFACCV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,YADD,cAChBG,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qD,+FCuBvB,UA9Ce,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMb,EAAQY,EAAaE,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAejB,OANAC,EAAAA,EAAAA,YAAU,YACNlB,EAAAA,EAAAA,MACKmB,MAAK,SAAApB,GAAO,OAAIU,GAAU,OAAIV,GAAlB,IACZqB,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAMW,OAAnB,GACnB,GAAE,CAACpB,KAGA,iCACI,kBAAMqB,SAfO,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAChBZ,EAA0B,KAAVb,EAAe,CAAEA,MAAOwB,EAAME,SAAS1B,MAAM2B,OAAU,CAAC,GACxEH,EAAMI,OACT,EAUO,WACI,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,aAAa,MAAMC,YAAY,kBAC/D,mBAAQH,KAAK,SAAb,wBAKJ,wBACKtB,GACGA,EAAO0B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACP,yBACI,SAAC,KAAD,CACIC,GAAE,kBAAaF,GACfG,MAAO,CAAEtB,SAAAA,GAFb,UAGI,uBAAIoB,OAJHD,EADF,MAUlBzB,IAAS,sEAGrB,C","sources":["API/fetchMovies.js","Pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '92be59e0090ddfe5570b8756c403476a';\n\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const getTrending = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const searchMovies = async (query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n    return response.data.results;\n}\n\nexport const getDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const getCast = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n}\n\nexport const getReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`);\n    return response.data.results;\n}","import { useEffect, useState } from \"react\";\nimport { useSearchParams, useLocation, Link } from \"react-router-dom\";\nimport { searchMovies } from \"API/fetchMovies\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState(null);\n    const [error, setError] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\");\n    const location = useLocation();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const input = e.currentTarget;\n        setSearchParams(query !== \"\" ? { query: input.elements.query.value } : {});\n        input.reset();\n    };\n\n    useEffect(() => {\n        searchMovies()\n            .then(results => setMovies([...results]))\n            .catch(error => setError(error.mesage))\n    }, [query]);\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"query\" autoComplete=\"off\" placeholder=\"Search movie\" />\n                <button type=\"submit\">\n                    Search\n                </button>\n            </form>\n\n            <ul>\n                {movies &&\n                    movies.map(({ id, title }) => (\n                        <li key={id}>\n                            <Link\n                                to={`/movies/${id}`}\n                                state={{ location }}>\n                                <p>{title}</p>\n                            </Link>\n                        </li>\n                    ))}\n            </ul>\n            {error && <p> Something went wrong, please try again.</p>}\n        </>\n    );\n};\n\nexport default Movies;"],"names":["axios","API_KEY","IMAGE_URL","getTrending","response","data","results","searchMovies","query","getDetails","movieId","getCast","cast","getReviews","useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","then","catch","mesage","onSubmit","e","preventDefault","input","currentTarget","elements","value","reset","type","name","autoComplete","placeholder","map","id","title","to","state"],"sourceRoot":""}
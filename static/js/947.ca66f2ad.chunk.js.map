{"version":3,"file":"static/js/947.ca66f2ad.chunk.js","mappings":"uUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAY,kCAEZC,EAAW,mCAAG,oGACAH,EAAAA,EAAAA,IAAA,sCAAyCC,IADzC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDO,EAApD,YADC,cAClBJ,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZG,EAAU,mCAAG,WAAOC,GAAP,uFACCV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADxC,cAChBG,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKVM,EAAO,mCAAG,WAAOD,GAAP,uFACIV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,IADnD,cACbG,EADa,yBAEZA,EAASC,KAAKO,MAFF,2CAAH,sDAKPC,EAAU,mCAAG,WAAOH,GAAP,uFACCV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,YADD,cAChBG,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qD,sFCmCvB,UA1DqB,WACjB,OAA0BQ,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAOR,OALAQ,EAAAA,EAAAA,YAAU,YACNT,EAAAA,EAAAA,IAAWC,GACNS,MAAK,SAAAb,GAAO,OAAIU,EAASV,EAAb,GACpB,GAAE,CAACI,KAGA,gCACMK,GAGE,iCACI,SAAC,KAAD,CAAMK,GAAG,IAAT,UACI,mBAAQC,KAAK,SAAb,wBAEJ,4BACI,0BACI,gBACIC,IAAKP,EAAMQ,YACLrB,EAAAA,GAAYa,EAAMQ,YADnB,oHAILC,IAAKT,EAAMU,MACXC,MAAM,GACNC,OAAO,QAIf,4BACI,wBAAKZ,EAAMU,SACX,kDAAwC,GAArBV,EAAMa,cAAzB,QACA,sCACA,iCAAOb,EAAMc,aACb,oCACA,iCAAOd,EAAMe,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,mBAzB9D,qDA+BJ,oDACA,4BACI,SAAC,KAAD,CAAMd,GAAI,OAAV,UACI,mBAAQC,KAAK,SAAb,qBAGJ,SAAC,KAAD,CAAMD,GAAI,WAAV,UACI,mBAAQC,KAAK,SAAb,2BAGR,SAAC,KAAD,MAGX,C","sources":["API/fetchMovies.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '92be59e0090ddfe5570b8756c403476a';\n\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const getTrending = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const searchMovies = async (query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n    return response.data.results;\n}\n\nexport const getDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const getCast = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n}\n\nexport const getReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`);\n    return response.data.results;\n}","import { useParams, Link, Outlet } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getDetails, IMAGE_URL } from \"API/fetchMovies\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        getDetails(movieId)\n            .then(results => setMovie(results))\n    }, [movieId]);\n    \n    return (\n        <>\n            {!movie ? (\n                <p> This movie is not found</p>\n            ) : (\n                <>\n                    <Link to=\"/\">\n                        <button type=\"button\">GO BACK</button>\n                    </Link>\n                    <div>\n                        <div>\n                            <img\n                                src={movie.poster_path\n                                    ? IMAGE_URL + movie.poster_path\n                                    : `https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png`\n                                }\n                                alt={movie.title}\n                                width=\"\"\n                                height=\"\"\n                            />\n                        </div>\n                    \n                        <div>\n                            <h2>{movie.title}</h2>\n                            <p>User score: {`${movie.vote_average * 10}`}%</p>\n                            <h3>Overview</h3>\n                            <p>{`${movie.overview}`}</p>\n                            <h3>Genres</h3>\n                            <p>{`${movie.genres.map(genre => genre.name).join(', ')}`}</p>\n                        </div>\n                    </div>\n                </>\n            )}\n\n            <h2>Additional information</h2>\n            <div>\n                <Link to={\"cast\"}>\n                    <button type=\"button\">Cast</button>\n                </Link>\n\n                <Link to={\"reviewes\"}>\n                    <button type=\"button\">Reviews</button>\n                </Link>\n            </div>\n            <Outlet/>\n        </>\n    );\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","IMAGE_URL","getTrending","response","data","results","searchMovies","query","getDetails","movieId","getCast","cast","getReviews","useState","movie","setMovie","useParams","useEffect","then","to","type","src","poster_path","alt","title","width","height","vote_average","overview","genres","map","genre","name","join"],"sourceRoot":""}